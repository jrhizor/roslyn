# simple.world - basic world file example
# Authors: Richard Vaughan
# $Id$

# time to pause (in GUI mode) or quit (in headless mode (-g)) the simulation
quit_time 3600 # 1 hour of simulated time

#resolution 0.02
resolution 0.1

define floorplan model
(
  # sombre, sensible, artistic
  color "gray30"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 0
  gui_outline 0
  gripper_return 0
  fiducial_return 0
)

define pioneer_base position 
(
  color "red"     # Default color.
  drive "diff"      # Differential steering model.
  gui_nose 1                    # Draw a nose on the robot so we can see which way it points
  obstacle_return 1             # Can hit things.
  #laser_return 1                 # reflects laser beams
  #ranger_return 1               # reflects sonar beams
  #blob_return 1                 # Seen by blobfinders  
  #fiducial_return 1             # Seen as "1" fiducial finders

  origin [-0.04465 0.0 0.0 0]
  #localization "gps"            
  #localization_origin [0 0 0 0]   # Start odometry at (0, 0, 0).

  # alternative odometric localization with simple error model
  # localization "odom"             # Change to "gps" to have impossibly perfect, global odometry
  #  odom_error [ 0.05 0.05 0.1 ]     # Odometry error or slip in X, Y and Theta
                                    # (Uniform random distribution)   
)

# The Pioneer3AT standard configuration
define pioneer3at pioneer_base
(
  # Actual size
  size [0.626 0.505 .22]

  # The pioneer's center of rotation is offset from its center of area
  origin [-0.04465 0.0 0.0 0.0]

  # Estimated mass in KG
  mass 40.0 

  # Body shape:
  block( 
    points 8
    point[0] [-0.18 0.313]
    point[1] [0.18 0.313]
    point[2] [0.2525 0.18]
    point[3] [0.2525 -0.18]
    point[4] [0.18 -0.313]
    point[5] [-0.18 -0.313]
    point[6] [-0.2525 -0.18]
    point[7] [-0.2525 0.18]
  )

  # Use the sonar array defined above
    
)

# configure the GUI window
window
(
  size [ 1000.000 1000.000 ] # in pixels
  scale 5 #37.481   # pixels per meter
  #scale 12.0402
  center [ -0.007  0.003 ]
  rotate [ 0  0 ]
  			
  show_data 1              # 1=on 0=off
  show_occupancy 0
)

# load an environment bitmap
floorplan
( 
  name "FGH"
  size [200 200 1]
  pose [0 0 0 1.57]
  bitmap "FGH.pgm"
)

define sicklaser ranger
(
  # laser-specific properties
  # factory settings for LMS200 
  sensor(
    range [ 0.0 8.0 ]
    fov 180.0
    samples 361
  )

  #samples 90 # still useful but much faster to compute

  # generic model properties
  color "blue"
  size [ 0.156 0.155 0.19 ] # dimensions from LMS200 data sheet 
)

# extends sicklaser to add nice-looking but relatively expensive geometry
define fancysicklaser sicklaser
(
  # bottom
  block( 
    points 4
    point[0] [ -0.02 -0.077 ]
    point[1] [  0.078 -0.077 ]
    point[2] [  0.078  0.077 ]
    point[3] [ -0.02  0.077 ]
    z [0 0.02 ]
  )

  # back
  block(
    points 4
    point[0] [ -0.078 -0.077 ]
    point[1] [ -0.02  -0.077 ]
    point[2] [ -0.02   0.077 ]
    point[3] [ -0.078  0.077 ]
    z [0 0.21 ]
  )

  # top
  block( points 4
    point[0] [ -0.02 -0.077 ]
    point[1] [  0.078 -0.077 ]
    point[2] [  0.078  0.077 ]
    point[3] [ -0.02  0.077 ]
    z [0.12 0.21 ]  
  )

  # laser bit
  block( points 4
    point[0] [ -0.02 -0.05 ]
   point[1] [  0.06 -0.05 ]
   point[2] [  0.06  0.05 ]
   point[3] [ -0.02  0.05 ]
   z [0.02 0.12 ]  
   color "gray10"
  )
)

pioneer3at
(		  
  # can refer to the robot by this name
  name "pioneer"
  pose [92 46 0 0] 

  fancysicklaser(color "blue")
)

interval_sim 100 